var search_data = {"index":{"searchIndex":["card","dealer","deck","object","player","testrun","change_direction()","create_deck()","draw_card()","draw_card()","draw_card()","each_card()","face_color()","face_value()","increment_player()","length()","new()","new()","new()","new()","new()","play_card()","point_value()","points()","points()","preferred_color()","shuffle()","sort_val()","to_s()","to_s()","which_card()","winner()","gemfile","gemfile.lock","readme","todo","runo.log"],"longSearchIndex":["card","dealer","deck","object","player","testrun","dealer#change_direction()","deck#create_deck()","dealer#draw_card()","deck#draw_card()","player#draw_card()","deck#each_card()","card#face_color()","card#face_value()","dealer#increment_player()","deck#length()","card::new()","dealer::new()","deck::new()","player::new()","testrun::new()","player#play_card()","card#point_value()","dealer#points()","player#points()","player#preferred_color()","deck#shuffle()","card#sort_val()","card#to_s()","player#to_s()","player#which_card()","dealer#winner()","","","","",""],"info":[["Card","","Card.html","","<p>Card class represents a single card in the deck\n"],["Dealer","","Dealer.html","","<p>to play game = Dealer.new(‘Mark’, ‘Wesley’, ‘Josh’, ‘Mingjia’)\n"],["Deck","","Deck.html","","<p>Stack of cards, may be multiple decks actually\n"],["Object","","Object.html","",""],["Player","","Player.html","","<p>Runo Player\n"],["TestRun","","TestRun.html","","<p>Class for running a single game\n<p>Run the test\n"],["change_direction","Dealer","Dealer.html#method-i-change_direction","()",""],["create_deck","Deck","Deck.html#method-i-create_deck","(number_of_decks = 1)",""],["draw_card","Dealer","Dealer.html#method-i-draw_card","()",""],["draw_card","Deck","Deck.html#method-i-draw_card","()",""],["draw_card","Player","Player.html#method-i-draw_card","(num_cards = 1)",""],["each_card","Deck","Deck.html#method-i-each_card","()",""],["face_color","Card","Card.html#method-i-face_color","()",""],["face_value","Card","Card.html#method-i-face_value","()",""],["increment_player","Dealer","Dealer.html#method-i-increment_player","()",""],["length","Deck","Deck.html#method-i-length","()",""],["new","Card","Card.html#method-c-new","(internal_value, color)",""],["new","Dealer","Dealer.html#method-c-new","(log:, players:)",""],["new","Deck","Deck.html#method-c-new","(number_of_decks = 1)",""],["new","Player","Player.html#method-c-new","(log:, name:, dealer:)",""],["new","TestRun","TestRun.html#method-c-new","(log:)",""],["play_card","Player","Player.html#method-i-play_card","(top_card)",""],["point_value","Card","Card.html#method-i-point_value","()",""],["points","Dealer","Dealer.html#method-i-points","()",""],["points","Player","Player.html#method-i-points","()",""],["preferred_color","Player","Player.html#method-i-preferred_color","()",""],["shuffle","Deck","Deck.html#method-i-shuffle","()",""],["sort_val","Card","Card.html#method-i-sort_val","()",""],["to_s","Card","Card.html#method-i-to_s","()",""],["to_s","Player","Player.html#method-i-to_s","()",""],["which_card","Player","Player.html#method-i-which_card","(top_card)",""],["winner","Dealer","Dealer.html#method-i-winner","()",""],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source ‘rubygems.org’\n<p>gem ‘logger’ gem ‘rubocop’ …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  ast (2.4.2)\n  logger (1.5.1)\n  parallel (1.22.1)\n  parser (3.1.2.0) ...</pre>\n"],["README","","README_rdoc.html","","<p>Ruby Uno\n"],["TODO","","TODO_rdoc.html","","<p>Add human player\n\n"],["runo.log","","runo_log.html","","<p># Logfile created on 2023-02-01 18:12:31 -0500 by logger.rb/v1.5.3 W, [2023-02-01T18:12:31.805399 #52753] …\n"]]}}